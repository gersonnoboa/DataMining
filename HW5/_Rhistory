correlation = upper / lower
paste("Correlation coefficient:", correlation)
total = f11+f00+f10+f01
cont = matrix(c(f11,f01,f11+f01,f10,f00,f10+f00,f11+f10,f01+f00,total), ncol = 3)
colnames(cont) <- c("E", "Not E", "Total")
rownames(cont) <- c("BC", "Not BC", "Total")
as.table(cont)
lift = (f11 / (f11 + f10)) / ((f11+f01) / total)
paste("Lift:", lift)
odds = (f11 * f00) / (f10 * f01)
paste("Odds factor:", odds)
upper = (f11/total) - (((f10+f11)/total)*((f11+f01)/total))
lower = sqrt(((f11+f10)/total) * ((f11+f01)/total) * ((f01+f00)/total) * ((f10+f00)/total))
correlation = upper / lower
paste("Correlation coefficient:", correlation)
f11 = 4
f10 = 2
f01 = 0
f00 = 4
total = f11+f00+f10+f01
cont = matrix(c(f11,f01,f11+f01,f10,f00,f10+f00,f11+f10,f01+f00,total), ncol = 3)
colnames(cont) <- c("E", "Not E", "Total")
rownames(cont) <- c("BC", "Not BC", "Total")
as.table(cont)
lift = (f11 / (f11 + f10)) / ((f11+f01) / total)
paste("Lift:", lift)
odds = (f11 * f00) / (f10 * f01)
paste("Odds factor:", odds)
upper = (f11/total) - (((f10+f11)/total)*((f11+f01)/total))
lower = sqrt(((f11+f10)/total) * ((f11+f01)/total) * ((f01+f00)/total) * ((f10+f00)/total))
correlation = upper / lower
paste("Correlation coefficient:", correlation)
f11 = 2
f10 = 2
f01 = 0
f00 = 4
total = f11+f00+f10+f01
cont = matrix(c(f11,f01,f11+f01,f10,f00,f10+f00,f11+f10,f01+f00,total), ncol = 3)
colnames(cont) <- c("A", "Not A", "Total")
rownames(cont) <- c("C", "Not C", "Total")
as.table(cont)
f11 = 2
f10 = 7
f01 = 1
f00 = 0
total = f11+f00+f10+f01
cont = matrix(c(f11,f01,f11+f01,f10,f00,f10+f00,f11+f10,f01+f00,total), ncol = 3)
colnames(cont) <- c("A", "Not A", "Total")
rownames(cont) <- c("C", "Not C", "Total")
as.table(cont)
lift = (f11 / (f11 + f10)) / ((f11+f01) / total)
paste("Lift:", lift)
odds = (f11 * f00) / (f10 * f01)
paste("Odds factor:", odds)
upper = (f11/total) - (((f10+f11)/total)*((f11+f01)/total))
lower = sqrt(((f11+f10)/total) * ((f11+f01)/total) * ((f01+f00)/total) * ((f10+f00)/total))
correlation = upper / lower
paste("Correlation coefficient:", correlation)
titanic = read.table("titanic.txt", header = TRUE, stringsAsFactors = T, sep = ",")
table(titanic$Sex, titanic$Survived)
table(titanic$Class, titanic$Survived)
table(titanic$Age, titanic$Survived)
titanic = read.table("titanic.txt", header = TRUE, stringsAsFactors = T, sep = ",")
table(titanic$Sex, titanic$Survived)
table[1,1]
titanicSex[1,1]
titanicSex <- table(titanic$Sex, titanic$Survived)
titanicSex[1,1]
titanicSex
titanicSex[2,2]
titanicSex
titanicSex[1,2]
(f11 * f00) / (f10 * f01)
f00 <- titanicSex[1,1]
f01 <- titanicSex[1,2]
f10 <- titanicSex[2,1]
f11 <- titanicSex[2,2]
(f11 * f00) / (f10 * f01)
paste("Lift:", (f11 * f00) / (f10 * f01))
titanicMale <- table(titanic$Sex, titanic$Survived)
titanicMale
f00 <- titanicMale[1,1]
f01 <- titanicMale[1,2]
f10 <- titanicMale[2,1]
f11 <- titanicMale[2,2]
paste("Odds ration:", (f11 * f00) / (f10 * f01))
paste("Odds ratio:", (f11 * f00) / (f10 * f01))
titanicSex <- table(titanic$Sex, titanic$Survived)
titanicSex
f00 <- titanicSex[2,1]
f01 <- titanicSex[2,2]
f10 <- titanicSex[1,1]
f11 <- titanicSex[1,2]
paste("Odds ratio:", (f11 * f00) / (f10 * f01))
table(titanic$Age, titanic$Survived)
f00 <- titanicSex[1,1]
f01 <- titanicSex[1,2]
f10 <- titanicSex[2,1]
f11 <- titanicSex[2,2]
paste("Odds ratio:", (f11 * f00) / (f10 * f01))
table(titanic$Age, titanic$Survived)
f00 <- titanicSex[1,1]
f01 <- titanicSex[1,2]
f10 <- titanicSex[2,1]
f11 <- titanicSex[2,2]
paste("Odds ratio:", (f11 * f00) / (f10 * f01))
table(titanic$Age, titanic$Survived)
f00 <- titanicSex[2,1]
f01 <- titanicSex[2,2]
f10 <- titanicSex[1,1]
f11 <- titanicSex[1,2]
paste("Odds ratio:", (f11 * f00) / (f10 * f01))
table(titanic$Age, titanic$Survived)
f00 <- titanicSex[2,2]
f01 <- titanicSex[2,1]
f10 <- titanicSex[1,2]
f11 <- titanicSex[1,1]
paste("Odds ratio:", (f11 * f00) / (f10 * f01))
f00 <- titanicSex[2,1]
f01 <- titanicSex[2,2]
f10 <- titanicSex[1,1]
f11 <- titanicSex[1,2]
table(titanic$Age, titanic$Survived)
f00 <- titanicSex[2,1]
f01 <- titanicSex[2,2]
f10 <- titanicSex[1,1]
f11 <- titanicSex[1,2]
paste("Odds ratio:", (f11 * f00) / (f10 * f01))
titanicAge = table(titanic$Age, titanic$Survived)
f00 <- titanicAge[2,1]
f01 <- titanicAge[2,2]
f10 <- titanicAge[1,1]
f11 <- titanicAge[1,2]
paste("Odds ratio:", (f11 * f00) / (f10 * f01))
titanicAge
f00 <- titanicAge[2,2]
f01 <- titanicAge[2,1]
f10 <- titanicAge[1,2]
f11 <- titanicAge[1,1]
paste("Odds ratio:", (f11 * f00) / (f10 * f01))
titanicAge = table(titanic$Age, titanic$Survived)
titanicAge
f00 <- titanicAge[2,2]
f01 <- titanicAge[2,1]
f10 <- titanicAge[1,2]
f11 <- titanicAge[1,1]
paste("Odds ratio:", (f11 * f00) / (f10 * f01))
titanicClass = table(titanic$Class, titanic$Survived)
titanicClass
f11 <- titanicClass[1,1] + titanicClass[1,2]
titanicClass
f11 <- titanicClass[2,1] + titanicClass[2,2]
titanicClass = table(titanic$Class, titanic$Survived)
titanicClass
f00 <- titanicClass[2,1]
f01 <- titanicClass[2,2]
f10 <- titanicClass[1,1]
f11 <- titanicClass[2,1] + titanicClass[2,2]
titanicClass[2,1]
titanicClass
titanicAge = table(titanic$Age, titanic$Survived)
titanicAge
f00 <- titanicAge[2,2]
f01 <- titanicAge[2,1]
f10 <- titanicAge[1,2]
f11 <- titanicAge[1,1]
titanicSex <- table(titanic$Sex, titanic$Survived)
titanicSex
titanicSex <- table(titanic$Sex, titanic$Survived)
titanicSex
f00 <- titanicSex[1,1]
f01 <- titanicSex[1,2]
f10 <- titanicSex[2,1]
f11 <- titanicSex[2,2]
f00 <- titanicSex[2,1]
f01 <- titanicSex[2,2]
f10 <- titanicSex[1,1]
f11 <- titanicSex[1,2]
titanicClass = table(titanic$Class, titanic$Survived)
titanicClass
f11 <- titanicClass[1,2] + titanicClass[2,2]
titanicClass
f00 <- titanicClass[1,3] + titanicClass[1,4]
titanicClass = table(titanic$Class, titanic$Survived)
titanicClass
f00 <- titanicClass[3,1] + titanicClass[4,1]
f01 <- titanicClass[3,2] + titanicClass[4,2]
f10 <- titanicClass[1,1] + titanicClass[2,1]
f11 <- titanicClass[1,2] + titanicClass[2,2]
titanicClass = table(titanic$Class, titanic$Survived)
titanicClass
f00 <- titanicClass[3,1] + titanicClass[4,1]
f01 <- titanicClass[3,2] + titanicClass[4,2]
f10 <- titanicClass[1,1] + titanicClass[2,1]
f11 <- titanicClass[1,2] + titanicClass[2,2]
paste("Odds ratio:", (f11 * f00) / (f10 * f01))
paste("Lift:", (f11/(f11 + f10)) / ((f11 + f01)/(f11 + f10 + f01 + f00)))
paste("Odds ratio:", (f11 * f00) / (f10 * f01))
paste("Lift:", (f11/(f11 + f10)) / ((f11 + f01)/(f11 + f10 + f01 + f00)))
f00 <- titanicSex[1,1]
f01 <- titanicSex[1,2]
f10 <- titanicSex[2,1]
f11 <- titanicSex[2,2]
paste("Odds ratio:", (f11 * f00) / (f10 * f01))
paste("Lift:", (f11/(f11 + f10)) / ((f11 + f01)/(f11 + f10 + f01 + f00)))
titanicAge = table(titanic$Age, titanic$Survived)
titanicAge
f00 <- titanicAge[2,2]
f01 <- titanicAge[2,1]
f10 <- titanicAge[1,2]
f11 <- titanicAge[1,1]
paste("Odds ratio:", (f11 * f00) / (f10 * f01))
paste("Lift:", (f11/(f11 + f10)) / ((f11 + f01)/(f11 + f10 + f01 + f00)))
f00 <- titanicSex[2,1]
f01 <- titanicSex[2,2]
f10 <- titanicSex[1,1]
f11 <- titanicSex[1,2]
paste("Odds ratio:", (f11 * f00) / (f10 * f01))
paste("Lift:", (f11/(f11 + f10)) / ((f11 + f01)/(f11 + f10 + f01 + f00)))
titanicAge = table(titanic$Age, titanic$Survived)
titanicAge
f00 <- titanicAge[2,2]
f01 <- titanicAge[2,1]
f10 <- titanicAge[1,2]
f11 <- titanicAge[1,1]
paste("Odds ratio:", (f11 * f00) / (f10 * f01))
paste("Lift:", (f11/(f11 + f10)) / ((f11 + f01)/(f11 + f10 + f01 + f00)))
f00 <- titanicClass[3,1] + titanicClass[4,1]
f01 <- titanicClass[3,2] + titanicClass[4,2]
f10 <- titanicClass[1,1] + titanicClass[2,1]
f11 <- titanicClass[1,2] + titanicClass[2,2]
paste("Odds ratio:", (f11 * f00) / (f10 * f01))
paste("Lift:", (f11/(f11 + f10)) / ((f11 + f01)/(f11 + f10 + f01 + f00)))
install.packages("entropy")
library(entropy)
mi.plugin(titanicClass)
mi.plugin(titanicSex)
mi.plugin(titanicAge)
paste("Entropy for {Class} -> {Survived}", mi.plugin(titanicClass))
paste("Entropy for {Sex} -> {Survived}", mi.plugin(titanicSex))
paste("Entropy for {Age} -> {Survived}", mi.plugin(titanicAge))
paste("Mutual information for {Class} -> {Survived}", mi.plugin(titanicClass))
paste("Mutual information for {Sex} -> {Survived}", mi.plugin(titanicSex))
paste("Mutual information for {Age} -> {Survived}", mi.plugin(titanicAge))
paste("Mutual information for {Age} -> {Survived}", mi.plugin(table(titanic$Class, titanic$Age)))
paste("Mutual information for {Age} -> {Survived}", mi.plugin(table(titanic$Age, titanic$Sex)))
paste("Mutual information for {Age} -> {Survived}", mi.plugin(table(titanic$Class, titanic$Sex)))
synthetic[1,]
mi.plugin(synthetic[1,])
mi.plugin(synthetic)
as.table(synthetic[1,1] + synthetic[1,2] + synthetic[1,3], synthetic[1,4])
table(synthetic[1,1] + synthetic[1,2] + synthetic[1,3], synthetic[1,4])
as.table(c(synthetic[1,1] + synthetic[1,2] + synthetic[1,3], synthetic[1,4]))
mi.plugin(as.table(c(synthetic[1,1] + synthetic[1,2] + synthetic[1,3], synthetic[1,4])))
syntheticSum = with(synthetic, c(first+second+third, fourth))
head(syntheticSum, 10)
syntheticSum = as.table(with(synthetic, c(first+second+third, fourth)))
head(syntheticSum, 10)
syntheticSum = as.data.frame(with(synthetic, c(first+second+third, fourth)))
syntheticSum = synthetic
syntheticSum = synthetic
syntheticSum$addition = with(synthetic, first+second+third)
table(syntheticSum$addition, syntheticSum$fourth)
mi.plugin(table(syntheticSum$addition, syntheticSum$fourth))
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(reshape2)
library(scatterplot3d)
library(entropy)
library(knitr)
opts_chunk$set(tidy.opts=list(width.cutoff=60),tidy=TRUE)
knitr::include_graphics("improved.jpg")
dataset = matrix(c(3,4,9,5,6), ncol = 5)
colnames(dataset) <- c("A", "B", "C", "D", "E")
rownames(dataset) <- c("Count")
as.table(dataset)
dataset = matrix(c(2,2,4,1,4,4,6,2), ncol = 8)
colnames(dataset) <- c("AC", "AD", "BC", "BD", "BE", "CD", "CE", "DE")
rownames(dataset) <- c("Count")
as.table(dataset)
dataset = matrix(c(1,1,4,1,2), ncol = 5)
colnames(dataset) <- c("ACD", "BCD", "BCE", "BDE", "CDE")
rownames(dataset) <- c("Count")
as.table(dataset)
dataset = matrix(c(1), ncol = 1)
colnames(dataset) <- c("BCDE")
rownames(dataset) <- c("Count")
as.table(dataset)
dataset = matrix(c(3,"N",4,"N",9,"N",5,"N",6,"N",4,"N",4,"N",4,"N",6,"N",4,"Y"), ncol = 10)
colnames(dataset) <- c("A", "B", "C", "D", "E", "BC", "BE", "CD", "CE", "BCE")
rownames(dataset) <- c("Count", "Is3Element")
as.table(dataset)
vertical = data.frame(A=character(), B=character(), C=character(), D=character(), E=character(), stringsAsFactors = FALSE)
vertical[1,] <- c("2","3","1","1","1")
vertical[2,] <- c("5","4","3","2","3")
vertical[3,] <- c("9","8","4","4","4")
vertical[4,] <- c("","10","5","5","7")
vertical[5,] <- c("","","6","6","8")
vertical[6,] <- c("","","7","","10")
vertical[7,] <- c("","","8","","")
vertical[8,] <- c("","","9","","")
vertical[9,] <- c("","","10","","")
vertical
f11 = 4
f10 = 0
f01 = 2
f00 = 4
total = f11+f00+f10+f01
cont = matrix(c(f11,f01,f11+f01,f10,f00,f10+f00,f11+f10,f01+f00,total), ncol = 3)
colnames(cont) <- c("E", "Not E", "Total")
rownames(cont) <- c("BC", "Not BC", "Total")
as.table(cont)
lift = (f11 / (f11 + f10)) / ((f11+f01) / total)
paste("Lift:", lift)
odds = (f11 * f00) / (f10 * f01)
paste("Odds factor:", odds)
upper = (f11/total) - (((f10+f11)/total)*((f11+f01)/total))
lower = sqrt(((f11+f10)/total) * ((f11+f01)/total) * ((f01+f00)/total) * ((f10+f00)/total))
correlation = upper / lower
paste("Correlation coefficient:", correlation)
f11 = 4
f10 = 2
f01 = 0
f00 = 4
total = f11+f00+f10+f01
cont = matrix(c(f11,f01,f11+f01,f10,f00,f10+f00,f11+f10,f01+f00,total), ncol = 3)
colnames(cont) <- c("B", "Not B", "Total")
rownames(cont) <- c("EC", "Not EC", "Total")
as.table(cont)
lift = (f11 / (f11 + f10)) / ((f11+f01) / total)
paste("Lift:", lift)
odds = (f11 * f00) / (f10 * f01)
paste("Odds factor:", odds)
upper = (f11/total) - (((f10+f11)/total)*((f11+f01)/total))
lower = sqrt(((f11+f10)/total) * ((f11+f01)/total) * ((f01+f00)/total) * ((f10+f00)/total))
correlation = upper / lower
paste("Correlation coefficient:", correlation)
f11 = 2
f10 = 7
f01 = 1
f00 = 0
total = f11+f00+f10+f01
cont = matrix(c(f11,f01,f11+f01,f10,f00,f10+f00,f11+f10,f01+f00,total), ncol = 3)
colnames(cont) <- c("A", "Not A", "Total")
rownames(cont) <- c("C", "Not C", "Total")
as.table(cont)
lift = (f11 / (f11 + f10)) / ((f11+f01) / total)
paste("Lift:", lift)
odds = (f11 * f00) / (f10 * f01)
paste("Odds factor:", odds)
upper = (f11/total) - (((f10+f11)/total)*((f11+f01)/total))
lower = sqrt(((f11+f10)/total) * ((f11+f01)/total) * ((f01+f00)/total) * ((f10+f00)/total))
correlation = upper / lower
paste("Correlation coefficient:", correlation)
set.seed(14)
generateSynthetic <- function(){
synthetic = data.frame(first = numeric(), second = numeric(), third = numeric(), fourth = numeric(), stringsAsFactors = FALSE)
tempFirst = 0
tempSecond = 0
tempThird = 0
tempFourth = 0
for (i in 1:10000){
case <- floor(runif(1, min=1, max =4))
if (case == 1){ #one small
tempFirst <- floor(runif(1, min = 50, max = 99))
tempSecond <- floor(runif(1, min = 100, max = 9800 - tempFirst))
tempThird <- floor(runif(1, min = 100, max = 9900 - tempFirst - tempSecond))
} else if (case == 2){ #two small
tempFirst <- floor(runif(1, min = 50, max = 99))
tempSecond <- floor(runif(1, min = 50, max = 99))
tempThird <- floor(runif(1, min = 100, max = 9900 - tempFirst - tempSecond))
} else if (case == 3){ #three small
tempFirst <- floor(runif(1, min = 50, max = 99))
tempSecond <- floor(runif(1, min = 50, max = 99))
tempThird <- floor(runif(1, min = 50, max = 99))
} else{ #four big
tempFirst <- floor(runif(1, min = 100, max = 9700 - tempFirst))
tempSecond <- floor(runif(1, min = 100, max = 9800 - tempFirst - tempSecond))
tempThird <- floor(runif(1, min = 100, max = 9900 - tempFirst - tempSecond - tempThird))
}
tempFourth <- floor(10000 - tempFirst - tempSecond - tempThird)
values = calculateSlots(tempFirst, tempSecond, tempThird, tempFourth)
synthetic[i,] <- values
}
return(synthetic)
}
calculateSlots <- function(one, two, three, four){
a<-c(1,2,3,4)
generated = sample(a, 4, replace=FALSE)
values = c(0,0,0,0)
for (i in 1:4){
if (i == 1){
values[generated[i]] <- one
} else if (i == 2){
values[generated[i]] <- two
} else if (i == 3) {
values[generated[i]] <- three
} else{
values[generated[i]] <- four
}
}
return(values)
}
synthetic = generateSynthetic()
head(synthetic, 10)
data <- melt(synthetic)
ggplot(data, aes(x=value, fill=variable)) +
geom_density(alpha=0.25)
subset50 = subset(synthetic, first >= 50 & first <=99)
ggplot(subset50, aes(x=first)) +
geom_density()
subset100 = subset(synthetic, first >= 100 & first <=10000)
ggplot(subset100, aes(x=first)) +
geom_density()
library(scatterplot3d)
sampleSynthetic = synthetic[sample(nrow(synthetic), 2000), ]
scatterplot3d(sampleSynthetic$first, sampleSynthetic$second, sampleSynthetic$third)
syntheticCalcs <- synthetic
syntheticCalcs$lift = with(syntheticCalcs, (first/(first + second)) / ((first + third)/(first + second + third + fourth)))
head(syntheticCalcs[with(syntheticCalcs, order(-lift)),], 3)
head(syntheticCalcs[with(syntheticCalcs, order(lift)),], 3)
syntheticCalcs$oddsFactor = with(syntheticCalcs, (first * fourth) / (second * third))
head(syntheticCalcs[with(syntheticCalcs, order(-oddsFactor)),], 3)
head(syntheticCalcs[with(syntheticCalcs, order(oddsFactor)),], 3)
total = nrow(syntheticCalcs)
upper = with(syntheticCalcs, (first/total - (((first/total) + (third/total))*((first/total) + (second/total)))))
lower = with(syntheticCalcs, sqrt(((first/total) + (third/total))*((first/total) + (second/total))*((second/total) + (fourth/total))*((third/total) + (fourth/total))))
correlation = upper/lower
syntheticCalcs$correlation = correlation
head(syntheticCalcs[with(syntheticCalcs, order(-correlation)),], 3)
head(syntheticCalcs[with(syntheticCalcs, order(correlation)),], 3)
head(subset(syntheticCalcs, correlation = 0), 5)
titanic = read.table("titanic.txt", header = TRUE, stringsAsFactors = T, sep = ",")
titanicSex <- table(titanic$Sex, titanic$Survived)
titanicSex
f00 <- titanicSex[1,1]
f01 <- titanicSex[1,2]
f10 <- titanicSex[2,1]
f11 <- titanicSex[2,2]
paste("Odds ratio:", (f11 * f00) / (f10 * f01))
paste("Lift:", (f11/(f11 + f10)) / ((f11 + f01)/(f11 + f10 + f01 + f00)))
f00 <- titanicSex[2,1]
f01 <- titanicSex[2,2]
f10 <- titanicSex[1,1]
f11 <- titanicSex[1,2]
paste("Odds ratio:", (f11 * f00) / (f10 * f01))
paste("Lift:", (f11/(f11 + f10)) / ((f11 + f01)/(f11 + f10 + f01 + f00)))
titanicAge = table(titanic$Age, titanic$Survived)
titanicAge
f00 <- titanicAge[2,2]
f01 <- titanicAge[2,1]
f10 <- titanicAge[1,2]
f11 <- titanicAge[1,1]
paste("Odds ratio:", (f11 * f00) / (f10 * f01))
paste("Lift:", (f11/(f11 + f10)) / ((f11 + f01)/(f11 + f10 + f01 + f00)))
titanicClass = table(titanic$Class, titanic$Survived)
titanicClass
f00 <- titanicClass[3,1] + titanicClass[4,1]
f01 <- titanicClass[3,2] + titanicClass[4,2]
f10 <- titanicClass[1,1] + titanicClass[2,1]
f11 <- titanicClass[1,2] + titanicClass[2,2]
paste("Odds ratio:", (f11 * f00) / (f10 * f01))
paste("Lift:", (f11/(f11 + f10)) / ((f11 + f01)/(f11 + f10 + f01 + f00)))
paste("Mutual information for {Class} -> {Survived}", mi.plugin(titanicClass))
paste("Mutual information for {Sex} -> {Survived}", mi.plugin(titanicSex))
paste("Mutual information for {Age} -> {Survived}", mi.plugin(titanicAge))
paste("Mutual information for {Age} -> {Survived}", mi.plugin(table(titanic$Class, titanic$Age)))
paste("Mutual information for {Age} -> {Survived}", mi.plugin(table(titanic$Age, titanic$Sex)))
paste("Mutual information for {Age} -> {Survived}", mi.plugin(table(titanic$Class, titanic$Sex)))
mi.plugin(synthetic)
syntheticSum = synthetic
syntheticSum$addition = with(synthetic, first+second+third)
mi.plugin(table(syntheticSum$addition, syntheticSum$fourth))
head(subset(syntheticCalcs, correlation == 0), 5)
head(subset(syntheticCalcs, correlation <= 0.001 & correlation >= -0.001), 5)
setwd("C:/Users/Gerson Noboa/Google Drive/Documentos/UT/S2/Data Mining/HW5")
rmd2rscript <- function(infile){
# read the file
flIn <- readLines(infile)
# identify the start of code blocks
cdStrt <- which(grepl(flIn, pattern = "```{r*", perl = TRUE))
# identify the end of code blocks
cdEnd <- sapply(cdStrt, function(x){
preidx <- which(grepl(flIn[-(1:x)], pattern = "```", perl = TRUE))[1]
return(preidx + x)
})
# define an expansion function
# strip code block indacators
flIn[c(cdStrt, cdEnd)] <- ""
expFun <- function(strt, End){
strt <- strt+1
End <- End-1
return(strt:End)
}
idx <- unlist(mapply(FUN = expFun, strt = cdStrt, End = cdEnd,
SIMPLIFY = FALSE))
# add comments to all lines except code blocks
comIdx <- 1:length(flIn)
comIdx <- comIdx[-idx]
for(i in comIdx){
flIn[i] <- paste("#' ", flIn[i], sep = "")
}
# create an output file
nm <- strsplit(infile, split = "\\.")[[1]][1]
flOut <- file(paste(nm, "[rmd2r].R", sep = ""), "w")
for(i in 1:length(flIn)){
cat(flIn[i], "\n", file = flOut, sep = "\t")
}
close(flOut)
}
rmd2rscript("HW4_B6604.Rmd")
rmd2rscript("HW4_B66084.Rmd")
